== BNF
<program> ::= PROGRAM ';' <top-level decl> <main> '.'

<main> ::= BEGIN <block> END

<top-level decls> ::= ( <data declaration> )*
<data declaration> ::= VAR <var-list> ';'

<var-list> ::= <var> ( <var> )*          // should be a comma here somewhere?
<var> ::= <ident> [ = <integer> ]

<block> ::= ( <statement> )*

<assignment> ::= <ident> '=' <expression> ';'
<expression> ::= <first term> ( <addop> <term> )*
<first term> ::= <first factor> <rest>
<term> ::= <factor> <rest>
<rest> ::= ( <mulop> <factor> )*
<first factor> ::= [ <addop> ] <factor>
<factor> ::= <var> | <number> | '(' <expression> ')'

<bool-expr> ::= <bool-term> ( <orop> <bool-term> )*
<bool-term> ::= <not-factor> ( <andop> <not-factor> )*
<not-factor> ::= [ '!' ] <relation>
<relation> ::= <expression> [ <relop> <expression> ]

<if> ::= IF <bool-expression> <block> [ ELSE <block> ] ENDIF
<while> ::= WHILE <bool-expression> <block> ENDWHILE
<statement> ::= <if> | <while> | <assignment>

<read> :: READ '(' <var> [ ',' <var> ] ')'
<write> :: WRITE '(' <var> [ ',' <var> ] ')'
 
== Keywords
 PROGRAM
 BEGIN
 END
 VAR
 IF
 ELSE
 WHILE
 READ

== Arithmetic Operators
 + - / *

== Boolean Operators
 | & !

== Relational Operators
 < > <> >= <= = 


